{
  "version": 3,
  "sources": ["src/app/services/firebase-configuration.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/compat/database';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseConfigurationService {\n  private configPath = '/configuration';\n\n  constructor(private db: AngularFireDatabase) {}\n\n  getPublicKey(): Observable<string> {\n    return this.db.object<string>(`${this.configPath}/stripe/public_key`).valueChanges();\n  }\n\n  getSecretKey(): Observable<string> {\n    return this.db.object<string>(`${this.configPath}/stripe/secret_key`).valueChanges();\n  }\n\n  getPricePaymentIntent(): Observable<number>{\n    return this.db.object<number>(`${this.configPath}/stripe/price_payment_intent`).valueChanges();\n  }\n\n  getPriceKey(): Observable<string> {\n    return this.db.object<string>(`${this.configPath}/stripe/price_id`).valueChanges();\n  }\n\n  updatePublicKey(newKey: string): Promise<void> {\n    return this.db.object<string>(`${this.configPath}/stripe/public_key`).set(newKey);\n  }\n\n  updateSecretKey(newKey: string): Promise<void> {\n    return this.db.object<string>(`${this.configPath}/stripe/secret_key`).set(newKey);\n  }\n\n  updatePriceKey(newId: string): Promise<void> {\n    return this.db.object<string>(`${this.configPath}/stripe/price_id`).set(newId);\n  }\n\n  updatePricePaymentIntent(newPrice: number): Promise<void>{\n    return this.db.object<number>(`${this.configPath}/stripe/price_payment_intent`).set(newPrice);\n  }\n\n  getLanguages(): Observable<any>{\n    return this.db.object<any>(`${this.configPath}/languages`).valueChanges();\n  }\n\n  addLanguage(code: string, name: string) {\n    const updates = {};\n    updates[`/configuration/languages/${code}`] = name;\n    return this.db.database.ref().update(updates);\n  }\n\n  deleteLanguage(code: string) {\n    return this.db.object(`/configuration/languages/${code}`).remove();\n  }\n}\n"],
  "mappings": "uFAOA,IAAaA,GAA4B,IAAA,CAAnC,IAAOA,EAAP,MAAOA,CAA4B,CAGvCC,YAAoBC,EAAuB,CAAvB,KAAAA,GAAAA,EAFZ,KAAAC,WAAa,gBAEyB,CAE9CC,cAAY,CACV,OAAO,KAAKF,GAAGG,OAAe,GAAG,KAAKF,UAAU,oBAAoB,EAAEG,aAAY,CACpF,CAEAC,cAAY,CACV,OAAO,KAAKL,GAAGG,OAAe,GAAG,KAAKF,UAAU,oBAAoB,EAAEG,aAAY,CACpF,CAEAE,uBAAqB,CACnB,OAAO,KAAKN,GAAGG,OAAe,GAAG,KAAKF,UAAU,8BAA8B,EAAEG,aAAY,CAC9F,CAEAG,aAAW,CACT,OAAO,KAAKP,GAAGG,OAAe,GAAG,KAAKF,UAAU,kBAAkB,EAAEG,aAAY,CAClF,CAEAI,gBAAgBC,EAAc,CAC5B,OAAO,KAAKT,GAAGG,OAAe,GAAG,KAAKF,UAAU,oBAAoB,EAAES,IAAID,CAAM,CAClF,CAEAE,gBAAgBF,EAAc,CAC5B,OAAO,KAAKT,GAAGG,OAAe,GAAG,KAAKF,UAAU,oBAAoB,EAAES,IAAID,CAAM,CAClF,CAEAG,eAAeC,EAAa,CAC1B,OAAO,KAAKb,GAAGG,OAAe,GAAG,KAAKF,UAAU,kBAAkB,EAAES,IAAIG,CAAK,CAC/E,CAEAC,yBAAyBC,EAAgB,CACvC,OAAO,KAAKf,GAAGG,OAAe,GAAG,KAAKF,UAAU,8BAA8B,EAAES,IAAIK,CAAQ,CAC9F,CAEAC,cAAY,CACV,OAAO,KAAKhB,GAAGG,OAAY,GAAG,KAAKF,UAAU,YAAY,EAAEG,aAAY,CACzE,CAEAa,YAAYC,EAAcC,EAAY,CACpC,IAAMC,EAAU,CAAA,EAChBA,OAAAA,EAAQ,4BAA4BF,CAAI,EAAE,EAAIC,EACvC,KAAKnB,GAAGqB,SAASC,IAAG,EAAGC,OAAOH,CAAO,CAC9C,CAEAI,eAAeN,EAAY,CACzB,OAAO,KAAKlB,GAAGG,OAAO,4BAA4Be,CAAI,EAAE,EAAEO,OAAM,CAClE,yCAjDW3B,GAA4B4B,EAAAC,CAAA,CAAA,CAAA,wBAA5B7B,EAA4B8B,QAA5B9B,EAA4B+B,UAAAC,WAF3B,MAAM,CAAA,EAEd,IAAOhC,EAAPiC,SAAOjC,CAA4B,GAAA",
  "names": ["FirebaseConfigurationService", "constructor", "db", "configPath", "getPublicKey", "object", "valueChanges", "getSecretKey", "getPricePaymentIntent", "getPriceKey", "updatePublicKey", "newKey", "set", "updateSecretKey", "updatePriceKey", "newId", "updatePricePaymentIntent", "newPrice", "getLanguages", "addLanguage", "code", "name", "updates", "database", "ref", "update", "deleteLanguage", "remove", "\u0275\u0275inject", "AngularFireDatabase", "factory", "\u0275fac", "providedIn", "_FirebaseConfigurationService"]
}
