{
  "version": 3,
  "sources": ["src/app/pages/user/certificates/certificates.component.ts", "src/app/pages/user/certificates/certificates.component.html"],
  "sourcesContent": ["import { Component, EventEmitter, Output, Type, inject } from '@angular/core';\nimport { IQuestion } from '../../../models/question';\nimport { QuestionService } from '../../../services/question.service';\nimport { Router } from '@angular/router';\nimport { orderBy } from 'lodash';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ICertificate } from '../../../models/certificate';\nimport { UserService } from '../../../services/user.service';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\n@Component({\n\tselector: 'ngbd-modal-confirm',\n\tstandalone: true,\n\ttemplate: `\n\t\t<div class=\"modal-header\">\n\t\t\t<h4 class=\"modal-title\" id=\"modal-title\">Eliminación de pregunta</h4>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn-close\"\n\t\t\t\taria-describedby=\"modal-title\"\n\t\t\t\t(click)=\"modal.dismiss('Cross click')\"\n\t\t\t></button>\n\t\t</div>\n\t\t<div class=\"modal-body\">\n\t\t\t<p>\n        <strong>¿Estás seguro de querer eliminar la pregunta?</strong>\n\t\t\t</p>\n\t\t\t<p>\n        Toda la información asociada a esta pregunta se eliminará permanentemente.\n\t\t\t\t<span class=\"text-danger\">Esta operación no se puede deshacer.</span>\n\t\t\t</p>\n\t\t</div>\n\t\t<div class=\"modal-footer\">\n\t\t\t<button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('cancel click')\">Cancelar</button>\n\t\t\t<button type=\"button\" class=\"btn btn-danger\" (click)=\"confirm()\">Eliminar pregunta</button>\n\t\t</div>\n\t`,\n})\nexport class NgbdModalConfirm {\n\t@Output() confirmDelete = new EventEmitter<void>();\n  modal = inject(NgbActiveModal);\n\n  confirm() {\n    this.confirmDelete.emit();\n    this.modal.close('Ok click');\n  }\n}\n\nexport class NgbdModalConfirmAutofocus {\n\tmodal = inject(NgbActiveModal);\n}\n\nconst MODALS: { [name: string]: Type<any> } = {\n\tfocusFirst: NgbdModalConfirm,\n\tautofocus: NgbdModalConfirmAutofocus,\n};\n@Component({\n  selector: 'app-certificates',\n  templateUrl: './certificates.component.html',\n  styleUrl: './certificates.component.scss'\n})\nexport class CertificatesComponent {\n  certifications: ICertificate[] = [];\n  totalQuestions: number = 0;\n  currentPage: number = 1;\n  pageSize: number = 10; // Number of items per page\n  paginationId: string = 'questionsPagination'; // Unique ID for pagination component\n  loading: Boolean = false;\n\n  constructor(private userService: UserService,\n              private router: Router,\n              private afAuth: AngularFireAuth) {\n  }\n\n\n  ngOnInit() {\n    this.getAllCertifications();\n  }\n\n  getAllCertifications() {\n    this.afAuth.authState.subscribe(user => {\n      if (user && user.uid) {\n        const userUid = user.uid;\n        this.userService.getCertificates(userUid).snapshotChanges().subscribe({\n          next: (data) => {\n            const certificationsObj = data.payload.toJSON() as { [key: string]: ICertificate };\n            if (certificationsObj) {\n              const certifications: ICertificate[] = Object.keys(certificationsObj).map(key => certificationsObj[key]);\n              this.certifications = certifications;\n            } else {\n            }\n          },\n          error: (error) => {\n            console.error('Error fetching certifications:', error);\n          }\n        });\n      }\n    });\n  }\n\n  downloadCertificate(downloadURL: string): void {\n    if (downloadURL) {\n      const link = document.createElement('a');\n      link.href = downloadURL;\n      link.download = `certificate.pdf`;\n      link.target = '_blank';\n      link.click();\n    } else {\n      console.error('Download URL is not available.');\n    }\n  }\n\n}\n", "<div class=\"container d-flex flex-column justify-content-start align-items-start gap-3 bg-white rounded-4 shadow-sm border-1 p-md-5 p-3\">\n  <div class=\"w-100\">\n    <app-breadcrumb></app-breadcrumb>\n  </div>\n  <div class=\"w-100 d-flex justify-content-between align-items-center\">\n    <div class=\"container-title fs-2 fw-bold\">\n      {{'user.certificates.title' | translate}}\n    </div>\n  </div>\n  <hr class=\"w-100\" />\n  <div class=\"container mt-md-4 mt-3 d-flex justify-content-center align-items-center flex-column\">\n    <div class=\"w-100 d-flex justify-content-center align-items-center\">\n      <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n    </div>\n    @if(!loading){\n    <table class=\"table w-100\">\n      <thead>\n        <tr class=\"table-question-header\">\n          <th class=\"fw-semibold d-none d-md-flex\">{{'user.certificates.table.th-1' | translate}}</th>\n          <th class=\"fw-semibold\">{{'user.certificates.table.th-2' | translate}}</th>\n          <th class=\"fw-semibold\">{{'user.certificates.table.th-3' | translate}}</th>\n          <th class=\"fw-semibold\">{{'user.certificates.table.th-4' | translate}}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let certification of certifications\" class=\"table-row\">\n          <td class=\"d-none d-md-table-cell\">{{ certification.certificateNumber }}</td>\n          <td>{{ certification.date | date }}</td>\n          <td>\n            {{ certification.iqValue }}\n          </td>\n          <td>\n            <div class=\"donwload-certificate d-flex justify-content-start align-items-center gap-3\" (click)=\"downloadCertificate(certification.url)\">\n              <i class=\"bi bi-file-earmark-arrow-down-fill\"></i>\n              {{'user.certificates.table.download' | translate}}\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    }\n  </div>\n\n</div>\n"],
  "mappings": "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",
  "names": ["\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275listener", "certification_r2", "\u0275\u0275restoreView", "_r1", "$implicit", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "downloadCertificate", "url", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "certificateNumber", "\u0275\u0275pipeBind1", "date", "\u0275\u0275textInterpolate1", "iqValue", "\u0275\u0275template", "CertificatesComponent_Conditional_11_tr_16_Template", "\u0275\u0275property", "certifications", "CertificatesComponent", "constructor", "userService", "router", "afAuth", "certifications", "totalQuestions", "currentPage", "pageSize", "paginationId", "loading", "ngOnInit", "getAllCertifications", "authState", "subscribe", "user", "uid", "userUid", "getCertificates", "snapshotChanges", "next", "data", "certificationsObj", "payload", "toJSON", "Object", "keys", "map", "key", "error", "console", "downloadCertificate", "downloadURL", "link", "document", "createElement", "href", "download", "target", "click", "\u0275\u0275directiveInject", "UserService", "Router", "AngularFireAuth", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275text", "\u0275\u0275template", "CertificatesComponent_span_10_Template", "CertificatesComponent_Conditional_11_Template", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "\u0275\u0275property", "\u0275\u0275conditional", "_CertificatesComponent"]
}
